<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:security="http://www.springframework.org/schema/security"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-4.3.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security-4.1.xsd">   
   	<!-- 对登录页面不进行拦截,后面带* 是因为这个请求页面后面可能有参数 -->
   	<security:http pattern="/loginpage" security="none" />
    <security:http auto-config="true">
    	<security:intercept-url pattern="/admin*" access="hasRole('ROLE_ADMIN')"/>
    	<security:intercept-url pattern="/welcome*" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"/>
    	<security:intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>
    	<!-- 指定登录页 -->
    	<security:form-login login-page="/loginpage" login-processing-url="/login" always-use-default-target="true"
            default-target-url="/welcome" authentication-failure-url="/loginpage?error=error"/>
        <!-- 退出登录 -->
        <security:logout logout-url="/logout" logout-success-url="/loginpage" invalidate-session="true"/>
        <!-- 记住登录信息 -->
        <security:remember-me key="authorition"/>
        <!-- 登录成功后拒绝访问跳转的页面:注意 ie对自定义403的页面有个页面大小限制，必须超过512字节，如果小于512字节，ie会使用其自带的403页面代替 -->
        <security:access-denied-handler error-page="/accessDenied"/>
    	<!-- 关闭csrf: 解决HTTP Status 403 - Expected CSRF token not found. Has your session expired? -->
    	<security:csrf disabled="true"/>
    </security:http>       
    <!-- 配置认证管理 -->
    <security:authentication-manager>
    	<security:authentication-provider>
    		<!-- md5方式加密 -->
    		<security:password-encoder hash="md5"/>
    		<!-- <security:user-service>
    			<security:user name="admin" password="21232f297a57a5a743894a0e4a801fc3" authorities="ROLE_USER"/>
    		</security:user-service> -->
    		<!-- 数据库方式 默认表users,authorities故而修改默认表查询jn_users... -->
    		<security:jdbc-user-service data-source-ref="dataSource"
    			users-by-username-query = "select username,password,enabled from jn_users where username = ?"  
            authorities-by-username-query = "select username,authority from jn_authorities where username = ?"
    		/>
    	</security:authentication-provider>
    </security:authentication-manager>
</beans>  